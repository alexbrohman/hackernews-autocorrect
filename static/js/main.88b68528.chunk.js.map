{"version":3,"sources":["modules/action.js","modules/reducer.js","modules/store.js","components/Header.js","components/Results.js","utils/API.js","components/Pagination.js","components/Footer.js","components/Home.js","components/App.js","serviceWorker.js","index.js"],"names":["Types","GET_ALL_STORIES","UPDATE_SEARCH","CLEAR_SEARCH","modules_action","searchType","search","type","payload","data","defaultState","stories","query","reducer","state","arguments","length","undefined","action","ACTIONS","newState","_","cloneDeep","initialState","TimeButton","_ref","sortDate","days","selectedDate","react_default","a","createElement","className","concat","onClick","Header","id","placeholder","onKeyUp","this","props","cancelSearch","alt","src","cancelSortDate","Header_TimeButton","Component","Results","typing","map","story","key","rel","target","href","url","points","title","dist_default","format","created_at","extractDomain","axios","create","baseURL","responseType","Pagination","page","nbPages","prevPage","nextPage","Footer","children","Home","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","delayedUpdate","debounce","searchAPI","updateSearchVal","bind","assertThisInitialized","stringify","queryString","keys","join","replace","setState","API","get","searchResults","getAllStories","document","getElementById","scrollTop","today","moment","unix","pastDays","subtract","numericFilters","value","clearSearch","queryType","e","persist","updateSearch","_this2","components_Header","hits","components_Results","components_Footer","isNaN","components_Pagination","connect","dispatch","store","window","REDUX_INITIAL_DATA","createStore","__REDUX_DEVTOOLS_EXTENSION__","App","es","components_Home","Boolean","location","hostname","match","ReactDOM","render","src_components_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.88b68528.chunk.js","sourcesContent":["\nconst Types = {\n    GET_ALL_STORIES: \"GET_ALL_STORIES\",\n    UPDATE_SEARCH: \"UPDATE_SEARCH\",\n    CLEAR_SEARCH: \"CLEAR_SEARCH\",\n}\n\nconst updateSearch = (searchType, search) => ({\n    type: Types.UPDATE_SEARCH,\n    payload: { searchType, search }\n})\n\nconst getAllStories = data => ({\n    type: Types.GET_ALL_STORIES,\n    payload: data\n})\n\nconst clearSearch = () => ({\n    type: Types.CLEAR_SEARCH,\n    payload: ''\n})\n\n\nexport default {\n    updateSearch,\n    getAllStories,\n    clearSearch,\n    Types\n};","import ACTIONS from \"./action\";\nimport _ from \"lodash\";\n\nconst defaultState = {\n    stories: {},\n    search: {\n        query: '',\n    }\n};\n\nconst reducer = (state = defaultState, action) => {\n    switch (action.type) {\n\n        case ACTIONS.Types.GET_ALL_STORIES: {\n            let newState = _.cloneDeep(state)\n            newState.stories = action.payload\n            return newState\n        }\n\n        case ACTIONS.Types.UPDATE_SEARCH: {\n            let newState = _.cloneDeep(state)\n            newState.search[action.payload.searchType] = action.payload.search\n            return newState\n        }\n\n        case ACTIONS.Types.CLEAR_SEARCH: {\n            let newState = _.cloneDeep(state)\n            newState.search = defaultState.search\n            return newState\n        }\n\n        default:\n            return state;\n    }\n};\n\nexport default reducer;","import { createStore } from \"redux\";\n// Logger with default options\n// import logger from \"redux-logger\";\n\nimport reducer from \"./reducer\";\n\nexport default function configureStore(initialState) {\n    const store = createStore(reducer, initialState, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\n    return store;\n}\n","import React, { Component } from 'react'\n\nconst TimeButton = ({ sortDate, days, selectedDate }) => {\n    return (\n        <span className={`sort-option ${selectedDate === days ? 'selected' : ''}`}\n            onClick={() => sortDate(days)}>\n            {days === 1 ?\n                <span>24 Hours</span> :\n                <span>Last {days} Days</span>\n            }\n        </span>\n    )\n}\n\nclass Header extends Component {\n    render() {\n        return (\n            <section id='search'>\n                <div className='search-wrap'>\n                    <h1>HACKER NEWS SEARCH</h1>\n                    <div className='search-bar'>\n                        <input id='search-input' placeholder=\"Search Hacker News\" type='text' onKeyUp={this.props.onKeyUp} />\n                        <span className='cancel' onClick={this.props.cancelSearch}>\n                            <img alt=\"cancel\" src='https://img.icons8.com/metro/26/000000/multiply.png'></img>\n                        </span>\n\n                        <div className='search-bar-settings'>\n                            <span className='sort-title'>Date:</span>\n                            <span className={`sort-option ${!this.props.selectedDate ? 'selected' : ''}`} onClick={this.props.cancelSortDate}>\n                                All\n                            </span>\n                            <TimeButton\n                                selectedDate={this.props.selectedDate}\n                                sortDate={this.props.sortDate}\n                                days={1}\n                            />\n                            <TimeButton\n                                selectedDate={this.props.selectedDate}\n                                sortDate={this.props.sortDate}\n                                days={7}\n                            />\n                            <TimeButton\n                                selectedDate={this.props.selectedDate}\n                                sortDate={this.props.sortDate}\n                                days={30}\n                            />\n                            <TimeButton\n                                selectedDate={this.props.selectedDate}\n                                sortDate={this.props.sortDate}\n                                days={90}\n                            />\n                            <span className='sort-option' onClick={this.props.cancelSortDate} />\n\n                        </div>\n                    </div>\n                </div>\n            </section >\n        )\n    }\n}\n\nexport default Header","import React, { Component } from 'react'\nimport extractDomain from 'extract-domain'\nimport Moment from 'react-moment';\n\nclass Results extends Component {\n    render() {\n        return (\n            <section id=\"results\">\n                <ul className={`results-list ${this.props.typing ? 'typing' : ''}`}>\n                    {this.props.stories.length ?\n                        this.props.stories.map((story, key) =>\n                            <a rel='noopener noreferrer' target='_blank' href={story.url} className=\"result\" key={key}>\n                                <div className=\"result-points\">\n                                    <div className=\"result-points-circle\">\n                                        {story.points}\n                                    </div>\n                                </div>\n                                <div className=\"result-title\">\n                                    <h3>{story.title}</h3>\n                                    <span className=\"result-date\">\n                                        <Moment format=\"dddd, MMMM Do YYYY\">\n                                            {story.created_at}\n                                        </Moment>\n                                    </span>\n                                </div>\n                                <span className=\"result-url\" rel=\"noopener noreferrer\" target=\"_blank\" href={story.url}>\n                                    {story.url ? extractDomain(story.url) : ''}\n                                </span>\n                            </a>\n                        )\n                        :\n                        <div className=\"nothing-found\">\n                            <span>Nothing Found Here!</span>\n                        </div>\n\n                    }\n                </ul>\n            </section>\n        )\n    }\n}\n\nexport default Results\n","import axios from \"axios\";\n\nexport default axios.create({\n    baseURL: \"https://cors-anywhere.herokuapp.com/http://hn.algolia.com/api/v1/\",\n    responseType: \"json\"\n});","import React from 'react'\n\nconst Pagination = ({ page, nbPages, prevPage, nextPage }) => {\n    return (\n        <div className='pagination'>\n            <button className='prev' onClick={prevPage}>PREVIOUS</button>\n            <p>PAGE: {page + 1} of {nbPages}</p>\n            <button className='next' onClick={nextPage}>NEXT</button>\n        </div>\n    )\n}\n\nexport default Pagination","import React from 'react'\n\nconst Footer = props => {\n    return (\n        <div className='footer'>\n            {props.children}\n        </div>\n    )\n}\n\nexport default Footer","import React, { Component } from 'react'\nimport Header from './Header'\nimport Results from './Results'\nimport { connect } from 'react-redux'\nimport ACTIONS from '../modules/action'\nimport API from '../utils/API'\nimport _ from 'lodash'\nimport Pagination from './Pagination'\nimport Footer from './Footer'\nimport moment from 'moment'\n\nconst mapStateToProps = state => ({\n    stories: state.stories,\n    search: state.search\n})\n\nconst mapDispatchToProps = dispatch => ({\n    getAllStories: data => dispatch(ACTIONS.getAllStories(data)),\n    updateSearch: (searchType, search) => dispatch(ACTIONS.updateSearch(searchType, search)),\n    clearSearch: () => dispatch(ACTIONS.clearSearch())\n})\n\nclass Home extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            searchType: 'search',\n            selectedDate: null,\n            typing: false\n        }\n\n        this.delayedUpdate = _.debounce(this.searchAPI, 1000)\n\n        this.updateSearchVal = this.updateSearchVal.bind(this)\n        this.nextPage = this.nextPage.bind(this)\n        this.prevPage = this.prevPage.bind(this)\n        this.stringify = this.stringify.bind(this)\n        this.sortDate = this.sortDate.bind(this)\n        this.cancelSortDate = this.cancelSortDate.bind(this)\n        this.cancelSearch = this.cancelSearch.bind(this)\n    }\n\n    stringify(search) {\n        let queryString = '?' + Object.keys(search).map(key => key + '=' + search[key]).join('&');\n        queryString = queryString.replace(/ /g, '%20')\n        return queryString + '&tags=story'\n    }\n\n    async searchAPI(search, searchType) {\n        if (this.state.typing) {\n            this.setState({\n                typing: false\n            })\n        }\n\n        if (!searchType) {\n            searchType = 'search'\n        }\n\n        let queryString;\n\n        if (search) {\n            queryString = this.stringify(search)\n        } else {\n            queryString = this.stringify(this.props.search)\n        }\n\n        let searchResults = await API.get(searchType + queryString)\n        this.props.getAllStories(searchResults.data)\n    }\n\n    nextPage() {\n        if (this.props.stories.page < this.props.stories.nbPages) {\n            let search = this.props.search\n            search.page = this.props.stories.page + 1\n            this.searchAPI(search)\n            document.getElementById('content-wrapper').scrollTop = 0\n        }\n    }\n\n    prevPage() {\n        if (this.props.stories.page > 0) {\n            let search = this.props.search\n            search.page = this.props.stories.page - 1\n            this.searchAPI(search)\n            document.getElementById('content-wrapper').scrollTop = 0\n        }\n    }\n\n    sortDate(days) {\n        let today = 'created_at_i <' + moment().unix()\n        let pastDays = 'created_at_i>' + moment().subtract(days, 'days').unix()\n\n        let search = this.props.search\n\n        search.numericFilters = pastDays + ',' + today\n        this.setState({\n            selectedDate: days\n        })\n        this.searchAPI(search)\n    }\n\n    cancelSortDate() {\n        let search = this.props.search\n        if (search.numericFilters) {\n            delete (search.numericFilters)\n            this.searchAPI(search)\n            this.setState({ selectedDate: null })\n        }\n    }\n\n    cancelSearch() {\n        document.getElementById('search-input').value = ''\n        this.props.clearSearch()\n        this.setState({\n            selectedDate: null,\n            typing: false\n        })\n        this.searchAPI({})\n    }\n\n    updateSearchVal(queryType, e) {\n        this.setState({ typing: true })\n        e.persist()\n        this.props.updateSearch(queryType, e.target.value)\n        this.delayedUpdate()\n    }\n\n    componentDidMount() {\n        this.searchAPI('')\n    }\n\n    render() {\n        return (\n            <div id='content-wrapper'>\n                <Header\n                    onKeyUp={(e) => this.updateSearchVal('query', e)}\n                    sortDate={this.sortDate}\n                    selectedDate={this.state.selectedDate}\n                    cancelSortDate={this.cancelSortDate}\n                    cancelSearch={this.cancelSearch}\n                />\n                {this.props.stories.hits ?\n                    <Results typing={this.state.typing} stories={this.props.stories.hits} /> : ''\n                }\n                <Footer>\n                    {!isNaN(this.props.stories.page) ?\n                        <Pagination\n                            page={this.props.stories.page}\n                            nbPages={this.props.stories.nbPages}\n                            prevPage={this.prevPage}\n                            nextPage={this.nextPage}\n                        />\n                        : ''}\n                </Footer>\n            </div>\n        )\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Home)","import React, { Component } from 'react'\nimport './App.css'\nimport { Provider } from 'react-redux'\nimport configureStore from '../modules/store'\nimport Home from './Home'\n\nconst store = configureStore(window.REDUX_INITIAL_DATA)\n\nclass App extends Component {\n\n  render() {\n    return (\n      <Provider store={store}>\n        <Home />\n      </Provider>\n    )\n  }\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}