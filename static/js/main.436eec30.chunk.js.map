{"version":3,"sources":["modules/action.js","modules/reducer.js","modules/store.js","components/Header.js","components/Results.js","utils/API.js","components/Pagination.js","components/Footer.js","components/Home.js","components/App.js","serviceWorker.js","index.js"],"names":["Types","GET_ALL_STORIES","UPDATE_SEARCH","CLEAR_SEARCH","modules_action","searchType","search","type","payload","data","defaultState","stories","query","reducer","state","arguments","length","undefined","action","ACTIONS","newState","_","cloneDeep","initialState","TimeButton","_ref","sortDate","days","selectedDate","react_default","a","createElement","className","concat","onClick","Header","props","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","id","onKeyUp","cancelSearch","src","cancelSortDate","Header_TimeButton","Component","Results","typing","map","story","key","rel","target","href","url","points","title","dist_default","format","created_at","extractDomain","axios","create","baseURL","responseType","Pagination","page","nbPages","prevPage","nextPage","Footer","children","Home","_this","delayedUpdate","debounce","searchAPI","updateSearchVal","bind","assertThisInitialized","stringify","queryString","keys","join","replace","setState","API","get","searchResults","getAllStories","document","getElementById","scrollTop","today","moment","unix","pastDays","subtract","numericFilters","value","clearSearch","queryType","e","persist","updateSearch","_this2","components_Header","hits","components_Results","components_Footer","isNaN","components_Pagination","connect","dispatch","store","window","REDUX_INITIAL_DATA","createStore","__REDUX_DEVTOOLS_EXTENSION__","App","es","components_Home","Boolean","location","hostname","match","ReactDOM","render","src_components_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.436eec30.chunk.js","sourcesContent":["\nconst Types = {\n    GET_ALL_STORIES: \"GET_ALL_STORIES\",\n    UPDATE_SEARCH: \"UPDATE_SEARCH\",\n    CLEAR_SEARCH: \"CLEAR_SEARCH\",\n}\n\nconst updateSearch = (searchType, search) => ({\n    type: Types.UPDATE_SEARCH,\n    payload: { searchType, search }\n})\n\nconst getAllStories = data => ({\n    type: Types.GET_ALL_STORIES,\n    payload: data\n})\n\nconst clearSearch = () => ({\n    type: Types.CLEAR_SEARCH,\n    payload: ''\n})\n\n\nexport default {\n    updateSearch,\n    getAllStories,\n    clearSearch,\n    Types\n};","import ACTIONS from \"./action\";\nimport _ from \"lodash\";\n\nconst defaultState = {\n    stories: {},\n    search: {\n        query: '',\n    }\n};\n\nconst reducer = (state = defaultState, action) => {\n    switch (action.type) {\n\n        case ACTIONS.Types.GET_ALL_STORIES: {\n            let newState = _.cloneDeep(state)\n            newState.stories = action.payload\n            return newState\n        }\n\n        case ACTIONS.Types.UPDATE_SEARCH: {\n            let newState = _.cloneDeep(state)\n            newState.search[action.payload.searchType] = action.payload.search\n            return newState\n        }\n\n        case ACTIONS.Types.CLEAR_SEARCH: {\n            let newState = _.cloneDeep(state)\n            newState.search = defaultState.search\n            return newState\n        }\n\n        default:\n            return state;\n    }\n};\n\nexport default reducer;","import { createStore } from \"redux\";\n// Logger with default options\n// import logger from \"redux-logger\";\n\nimport reducer from \"./reducer\";\n\nexport default function configureStore(initialState) {\n    const store = createStore(reducer, initialState, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\n    return store;\n}\n","import React, { Component } from 'react'\n\nconst TimeButton = ({ sortDate, days, selectedDate }) => {\n    return (\n        <span className={`sort-option ${selectedDate === days ? 'selected' : ''}`}\n            onClick={() => sortDate(days)}>\n            {days == 1 ?\n                <span>24 Hours</span> :\n                <span>Last {days} Days</span>\n            }\n        </span>\n    )\n}\n\nclass Header extends Component {\n    constructor(props) {\n        super(props)\n    }\n\n    render() {\n        return (\n            <section id='search'>\n                <div className='search-wrap'>\n                    <h1>HACKER NEWS SEARCH</h1>\n                    <div className='search-bar'>\n                        <input id='search-input' type='text' onKeyUp={this.props.onKeyUp} />\n                        <span className='cancel' onClick={this.props.cancelSearch}>\n                            <img src='https://img.icons8.com/metro/26/000000/multiply.png'></img>\n                        </span>\n\n                        <div className='search-bar-settings'>\n                            <span className='sort-title'>Date:</span>\n                            <span className={`sort-option ${!this.props.selectedDate ? 'selected' : ''}`} onClick={this.props.cancelSortDate}>\n                                All\n                            </span>\n                            <TimeButton\n                                selectedDate={this.props.selectedDate}\n                                sortDate={this.props.sortDate}\n                                days={1}\n                            />\n                            <TimeButton\n                                selectedDate={this.props.selectedDate}\n                                sortDate={this.props.sortDate}\n                                days={7}\n                            />\n                            <TimeButton\n                                selectedDate={this.props.selectedDate}\n                                sortDate={this.props.sortDate}\n                                days={30}\n                            />\n                            <TimeButton\n                                selectedDate={this.props.selectedDate}\n                                sortDate={this.props.sortDate}\n                                days={90}\n                            />\n                            <span className='sort-option' onClick={this.props.cancelSortDate} />\n\n                        </div>\n                    </div>\n                </div>\n            </section >\n        )\n    }\n}\n\nexport default Header","import React, { Component } from 'react'\nimport extractDomain from 'extract-domain'\nimport Moment from 'react-moment';\n\nclass Results extends Component {\n    render() {\n        return (\n            <section id=\"results\">\n                <ul className={`results-list ${this.props.typing ? 'typing' : ''}`}>\n                    {this.props.stories.length ?\n                        this.props.stories.map((story, key) =>\n                            <a rel='noopener noreferrer' target='_blank' href={story.url} className=\"result\" key={key}>\n                                <div className=\"result-points\">\n                                    <div className=\"result-points-circle\">\n                                        {story.points}\n                                    </div>\n                                </div>\n                                <div className=\"result-title\">\n                                    <h3>{story.title}</h3>\n                                    <span className=\"result-date\">\n                                        <Moment format=\"dddd, MMMM Do YYYY\">\n                                            {story.created_at}\n                                        </Moment>\n                                    </span>\n                                </div>\n                                <span className=\"result-url\" rel=\"noopener noreferrer\" target=\"_blank\" href={story.url}>\n                                    {story.url ? extractDomain(story.url) : ''}\n                                </span>\n                            </a>\n                        )\n                        :\n                        <div className=\"nothing-found\">\n                            <span>Nothing Found Here!</span>\n                        </div>\n\n                    }\n                </ul>\n            </section>\n        )\n    }\n}\n\nexport default Results\n","import axios from \"axios\";\n\nexport default axios.create({\n    baseURL: \"https://hn.algolia.com/api/v1/\",\n    responseType: \"json\"\n});","import React from 'react'\n\nconst Pagination = ({ page, nbPages, prevPage, nextPage }) => {\n    return (\n        <div className='pagination'>\n            <button className='prev' onClick={prevPage}>PREVIOUS</button>\n            <p>PAGE: {page + 1} of {nbPages}</p>\n            <button className='next' onClick={nextPage}>NEXT</button>\n        </div>\n    )\n}\n\nexport default Pagination","import React from 'react'\n\nconst Footer = props => {\n    return (\n        <div className='footer'>\n            {props.children}\n        </div>\n    )\n}\n\nexport default Footer","import React, { Component } from 'react'\nimport Header from './Header'\nimport Results from './Results'\nimport { connect } from 'react-redux'\nimport ACTIONS from '../modules/action'\nimport API from '../utils/API'\nimport _ from 'lodash'\nimport Pagination from './Pagination'\nimport Footer from './Footer'\nimport moment from 'moment'\n\nconst mapStateToProps = state => ({\n    stories: state.stories,\n    search: state.search\n})\n\nconst mapDispatchToProps = dispatch => ({\n    getAllStories: data => dispatch(ACTIONS.getAllStories(data)),\n    updateSearch: (searchType, search) => dispatch(ACTIONS.updateSearch(searchType, search)),\n    clearSearch: () => dispatch(ACTIONS.clearSearch())\n})\n\nclass Home extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            searchType: 'search',\n            selectedDate: null,\n            typing: false\n        }\n\n        this.delayedUpdate = _.debounce(this.searchAPI, 1000)\n\n        this.updateSearchVal = this.updateSearchVal.bind(this)\n        this.nextPage = this.nextPage.bind(this)\n        this.prevPage = this.prevPage.bind(this)\n        this.stringify = this.stringify.bind(this)\n        this.sortDate = this.sortDate.bind(this)\n        this.cancelSortDate = this.cancelSortDate.bind(this)\n        this.cancelSearch = this.cancelSearch.bind(this)\n    }\n\n    stringify(search) {\n        let queryString = '?' + Object.keys(search).map(key => key + '=' + search[key]).join('&');\n        queryString = queryString.replace(/ /g, '%20')\n        return queryString + '&tags=story'\n    }\n\n    async searchAPI(search, searchType) {\n        if (this.state.typing) {\n            this.setState({\n                typing: false\n            })\n        }\n\n        if (!searchType) {\n            searchType = 'search'\n        }\n\n        let queryString;\n\n        if (search) {\n            queryString = this.stringify(search)\n        } else {\n            queryString = this.stringify(this.props.search)\n        }\n\n        let searchResults = await API.get(searchType + queryString)\n        this.props.getAllStories(searchResults.data)\n    }\n\n    nextPage() {\n        if (this.props.stories.page < this.props.stories.nbPages) {\n            let search = this.props.search\n            search.page = this.props.stories.page + 1\n            this.searchAPI(search)\n            document.getElementById('content-wrapper').scrollTop = 0\n        }\n    }\n\n    prevPage() {\n        if (this.props.stories.page > 0) {\n            let search = this.props.search\n            search.page = this.props.stories.page - 1\n            this.searchAPI(search)\n            document.getElementById('content-wrapper').scrollTop = 0\n        }\n    }\n\n    sortDate(days) {\n        let today = 'created_at_i <' + moment().unix()\n        let pastDays = 'created_at_i>' + moment().subtract(days, 'days').unix()\n\n        let search = this.props.search\n\n        search.numericFilters = pastDays + ',' + today\n        this.setState({\n            selectedDate: days\n        })\n        this.searchAPI(search)\n    }\n\n    cancelSortDate() {\n        let search = this.props.search\n        if (search.numericFilters) {\n            delete (search.numericFilters)\n            this.searchAPI(search)\n            this.setState({ selectedDate: null })\n        }\n    }\n\n    cancelSearch() {\n        document.getElementById('search-input').value = ''\n        this.props.clearSearch()\n        this.setState({\n            selectedDate: null,\n            typing: false\n        })\n        this.searchAPI({})\n    }\n\n    updateSearchVal(queryType, e) {\n        this.setState({ typing: true })\n        e.persist()\n        this.props.updateSearch(queryType, e.target.value)\n        this.delayedUpdate()\n    }\n\n    componentDidMount() {\n        this.searchAPI('')\n    }\n\n    render() {\n        return (\n            <div id='content-wrapper'>\n                <Header\n                    onKeyUp={(e) => this.updateSearchVal('query', e)}\n                    sortDate={this.sortDate}\n                    selectedDate={this.state.selectedDate}\n                    cancelSortDate={this.cancelSortDate}\n                    cancelSearch={this.cancelSearch}\n                />\n                {this.props.stories.hits ?\n                    <Results typing={this.state.typing} stories={this.props.stories.hits} /> : ''\n                }\n                <Footer>\n                    {!isNaN(this.props.stories.page) ?\n                        <Pagination\n                            page={this.props.stories.page}\n                            nbPages={this.props.stories.nbPages}\n                            prevPage={this.prevPage}\n                            nextPage={this.nextPage}\n                        />\n                        : ''}\n                </Footer>\n            </div>\n        )\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Home)","import React, { Component } from 'react'\nimport './App.css'\nimport { Provider } from 'react-redux'\nimport configureStore from '../modules/store'\nimport Home from './Home'\n\nconst store = configureStore(window.REDUX_INITIAL_DATA)\n\nclass App extends Component {\n\n  render() {\n    return (\n      <Provider store={store}>\n        <Home />\n      </Provider>\n    )\n  }\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}